callout printf;
callout srandom;
callout random;

// Check if an array of integers is a palindrome.

int A[100];

int get_random() {
	return random();
}

boolean check_if_palindrome(int length) {
	int index;
  boolean is_palindrome;
	index = 0;
    is_palindrome = true;

    while (is_palindrome && index < length / 2):100 {
        if (A[index] != A[length-index-1]) {
        	is_palindrome = false;
        	break;
        }
        index += 1;
	}
	return is_palindrome;
}

void main() {
    boolean deterministic;
	int length, i, temp;
	boolean is_palindrome;
	boolean is_palindrome1001;
	deterministic = true;
	if(!deterministic){
	   length = 50;
	   srandom(17);
	   for (i=0, length) {
		temp = get_random();
		A[i] = temp;
	   }
	   is_palindrome = check_if_palindrome(length);
	   printf("Is this a palindrome? %d", is_palindrome);
	}
	
	else{
	   //This sets up a palindrome of length 100; it's just 1001001...until 100 numbers.
	   length = 100;
	   for(i = 0, length){
	       if ( (i % 3) == 0){
	           A[i] = 1;
	       }
	       else{
	           A[i] = 0;
	       }   
	   }
	is_palindrome1001 = check_if_palindrome(length);
	printf("This is a deterministic test for the palindrome 1001 replicated 25 times.\n");
	printf("Is this a palindrome? %d\n", is_palindrome1001);
    }
}
